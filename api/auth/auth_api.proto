syntax = "proto3";

package percona.platform.auth.v1;

option go_package = "auth;authv1";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/protobuf/timestamp.proto";

// AuthAPI provides API for authentication and authorization for Percona services.
service AuthAPI {
  // SignUp creates new user with given email and password.
  rpc SignUp(SignUpRequest) returns (SignUpResponse);
  // SignIn checks user authentication, creates session and returns session ID.
  rpc SignIn(SignInRequest) returns (SignInResponse);
  // SignOut terminates user session.
  rpc SignOut(SignOutRequest) returns (SignOutResponse);
  // RefreshSession refreshes session timeout.
  rpc RefreshSession(RefreshSessionRequest) returns (RefreshSessionResponse);
  // ResetPassword initiates user's password reset procedure.
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);
  // GetProfile returns user's email, first name and last name.
  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse);
}

message SignUpRequest {
  // User email.
  string email = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // User password.
  string password = 2 [deprecated = true];
  // User first name.
  string first_name = 3;
  // User last name.
  string last_name = 4;
}

message SignUpResponse {}

message SignInRequest {
  // User email.
  string email = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // User password.
  string password = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message SignInResponse {
  // Session ID.
  string session_id = 1;
  // Session expiration time.
  google.protobuf.Timestamp expire_time = 2;
}

message SignOutRequest {}

message SignOutResponse {}

message RefreshSessionRequest {}

message RefreshSessionResponse {
  // Session expiration time.
  google.protobuf.Timestamp expire_time = 1;
  // User email.
  string email = 2;
}

message ResetPasswordRequest {
  // User email.
  string email = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message ResetPasswordResponse {}

message GetProfileRequest {}

message GetProfileResponse {
  // User email.
  string email = 1;
  // User first name.
  string first_name = 2;
  // User last name.
  string last_name = 3;
}
