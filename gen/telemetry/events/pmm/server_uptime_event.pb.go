// Code generated by protoc-gen-go. DO NOT EDIT.
// source: telemetry/events/pmm/server_uptime_event.proto

package pmmv1

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// DistributionMethod represents PMM Server distribution method.
type DistributionMethod int32

const (
	// DISTRIBUTION_METHOD_INVALID represents unknown distribution method.
	DistributionMethod_DISTRIBUTION_METHOD_INVALID DistributionMethod = 0
	// DOCKER represents Docker distribution method.
	DistributionMethod_DOCKER DistributionMethod = 1
	// OVF represents Open Virtualization Format / Open Virtual Appliance distribution method.
	DistributionMethod_OVF DistributionMethod = 2
	// AMI represents Amazon Machine Image distribution method.
	DistributionMethod_AMI DistributionMethod = 3
)

var DistributionMethod_name = map[int32]string{
	0: "DISTRIBUTION_METHOD_INVALID",
	1: "DOCKER",
	2: "OVF",
	3: "AMI",
}

var DistributionMethod_value = map[string]int32{
	"DISTRIBUTION_METHOD_INVALID": 0,
	"DOCKER":                      1,
	"OVF":                         2,
	"AMI":                         3,
}

func (x DistributionMethod) String() string {
	return proto.EnumName(DistributionMethod_name, int32(x))
}

func (DistributionMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b4e7110136046fd, []int{0}
}

// ServerUptimeEvent contains basic information about PMM Server version,
// uptime, and distribution method.
type ServerUptimeEvent struct {
	// PMM Server unique identifier.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// PMM Server version.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// PMM Server uptime.
	UpDuration *duration.Duration `protobuf:"bytes,3,opt,name=up_duration,json=upDuration,proto3" json:"up_duration,omitempty"`
	// PMM Server distribution method.
	DistributionMethod   DistributionMethod `protobuf:"varint,4,opt,name=distribution_method,json=distributionMethod,proto3,enum=percona.platform.telemetry.events.pmm.v1.DistributionMethod" json:"distribution_method,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ServerUptimeEvent) Reset()         { *m = ServerUptimeEvent{} }
func (m *ServerUptimeEvent) String() string { return proto.CompactTextString(m) }
func (*ServerUptimeEvent) ProtoMessage()    {}
func (*ServerUptimeEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b4e7110136046fd, []int{0}
}

func (m *ServerUptimeEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerUptimeEvent.Unmarshal(m, b)
}

func (m *ServerUptimeEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerUptimeEvent.Marshal(b, m, deterministic)
}

func (m *ServerUptimeEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerUptimeEvent.Merge(m, src)
}

func (m *ServerUptimeEvent) XXX_Size() int {
	return xxx_messageInfo_ServerUptimeEvent.Size(m)
}

func (m *ServerUptimeEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerUptimeEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ServerUptimeEvent proto.InternalMessageInfo

func (m *ServerUptimeEvent) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ServerUptimeEvent) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ServerUptimeEvent) GetUpDuration() *duration.Duration {
	if m != nil {
		return m.UpDuration
	}
	return nil
}

func (m *ServerUptimeEvent) GetDistributionMethod() DistributionMethod {
	if m != nil {
		return m.DistributionMethod
	}
	return DistributionMethod_DISTRIBUTION_METHOD_INVALID
}

func init() {
	proto.RegisterEnum("percona.platform.telemetry.events.pmm.v1.DistributionMethod", DistributionMethod_name, DistributionMethod_value)
	proto.RegisterType((*ServerUptimeEvent)(nil), "percona.platform.telemetry.events.pmm.v1.ServerUptimeEvent")
}

func init() {
	proto.RegisterFile("telemetry/events/pmm/server_uptime_event.proto", fileDescriptor_7b4e7110136046fd)
}

var fileDescriptor_7b4e7110136046fd = []byte{
	// 384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4f, 0xab, 0xd3, 0x40,
	0x14, 0xc5, 0x9d, 0xe4, 0xd9, 0xe0, 0x3c, 0x91, 0x38, 0x2e, 0x8c, 0x4f, 0xb0, 0xc1, 0x55, 0x10,
	0xde, 0x0c, 0xaf, 0x82, 0x2b, 0x37, 0x8d, 0xa9, 0x18, 0xb4, 0x0d, 0xa4, 0x7f, 0x16, 0x6e, 0x42,
	0xd2, 0x4c, 0xd3, 0xc1, 0x4c, 0x66, 0x98, 0x4c, 0x52, 0xdc, 0xb9, 0x14, 0xbf, 0x64, 0xa1, 0x9f,
	0x44, 0x9a, 0x18, 0x15, 0xba, 0x79, 0xbb, 0x7b, 0xef, 0x99, 0xf9, 0x9d, 0x73, 0x2f, 0xc4, 0x9a,
	0x96, 0x94, 0x53, 0xad, 0xbe, 0x13, 0xda, 0xd2, 0x4a, 0xd7, 0x44, 0x72, 0x4e, 0x6a, 0xaa, 0x5a,
	0xaa, 0x92, 0x46, 0x6a, 0xc6, 0x69, 0xd2, 0x09, 0x58, 0x2a, 0xa1, 0x05, 0xf2, 0x24, 0x55, 0x5b,
	0x51, 0xa5, 0x58, 0x96, 0xa9, 0xde, 0x09, 0xc5, 0xff, 0x01, 0x70, 0x0f, 0xc0, 0x92, 0x73, 0xdc,
	0xde, 0xdd, 0xbc, 0x2b, 0x98, 0xde, 0x37, 0x19, 0xde, 0x0a, 0x4e, 0xf8, 0x81, 0xe9, 0x6f, 0xe2,
	0x40, 0x0a, 0x71, 0xdb, 0x61, 0x6e, 0xdb, 0xb4, 0x64, 0x79, 0xaa, 0x85, 0xaa, 0xc9, 0xdf, 0xb2,
	0x77, 0xb8, 0x79, 0x55, 0x08, 0x51, 0x94, 0x94, 0x74, 0x5d, 0xd6, 0xec, 0x48, 0xde, 0xa8, 0x54,
	0x33, 0x51, 0xf5, 0xfa, 0xeb, 0x5f, 0x06, 0x7c, 0xba, 0xec, 0xf2, 0xad, 0xbb, 0x78, 0xb3, 0xb3,
	0x2b, 0x7a, 0x0e, 0x0d, 0x96, 0x3b, 0xc0, 0x05, 0xde, 0x63, 0xdf, 0x3a, 0x1d, 0xc7, 0xe6, 0x0f,
	0x60, 0xc7, 0x06, 0xcb, 0x91, 0x0b, 0xad, 0x96, 0xaa, 0x9a, 0x89, 0xca, 0x31, 0x5c, 0xe0, 0x3d,
	0xf2, 0x47, 0xa7, 0xe3, 0xd8, 0x90, 0x57, 0xf1, 0x30, 0x46, 0x3e, 0xbc, 0x6e, 0x64, 0x32, 0xb8,
	0x38, 0xa6, 0x0b, 0xbc, 0xeb, 0xc9, 0x0b, 0xdc, 0xc7, 0xc0, 0x43, 0x0c, 0x1c, 0xfc, 0x79, 0xd0,
	0x03, 0x5c, 0x10, 0xc3, 0x46, 0x0e, 0x33, 0xd4, 0xc2, 0x67, 0x39, 0xab, 0xb5, 0x62, 0x59, 0x73,
	0xee, 0x13, 0x4e, 0xf5, 0x5e, 0xe4, 0xce, 0x95, 0x0b, 0xbc, 0x27, 0x93, 0xf7, 0xf8, 0xbe, 0x47,
	0xc3, 0xc1, 0x7f, 0x90, 0x79, 0xc7, 0xe8, 0xb7, 0xf9, 0x09, 0x40, 0x8c, 0xf2, 0x0b, 0xf1, 0xcd,
	0x12, 0xa2, 0xcb, 0x2f, 0x68, 0x0c, 0x5f, 0x06, 0xe1, 0x72, 0x15, 0x87, 0xfe, 0x7a, 0x15, 0x46,
	0x8b, 0x64, 0x3e, 0x5b, 0x7d, 0x8a, 0x82, 0x24, 0x5c, 0x6c, 0xa6, 0x5f, 0xc2, 0xc0, 0x7e, 0x80,
	0x20, 0x1c, 0x05, 0xd1, 0x87, 0xcf, 0xb3, 0xd8, 0x06, 0xc8, 0x82, 0x66, 0xb4, 0xf9, 0x68, 0x1b,
	0xe7, 0x62, 0x3a, 0x0f, 0x6d, 0xd3, 0xb7, 0xbe, 0x3e, 0x94, 0x9c, 0xb7, 0x77, 0xd9, 0xa8, 0x5b,
	0xfe, 0xed, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xae, 0x65, 0x38, 0xee, 0x25, 0x02, 0x00, 0x00,
}
